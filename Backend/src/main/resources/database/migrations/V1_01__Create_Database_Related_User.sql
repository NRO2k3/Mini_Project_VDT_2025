CREATE TABLE roles(
  id BIGSERIAL PRIMARY KEY,
  name VARCHAR(50) NOT NULL UNIQUE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE users(
  id BIGSERIAL PRIMARY KEY,
  role_id BIGINT CHECK(role_id IS NULL OR role_id > 0) NULL DEFAULT NULL,
  name VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  phone VARCHAR(20) NOT NULL UNIQUE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT fk_id FOREIGN KEY(role_id) REFERENCES roles(id) ON DELETE CASCADE
);

CREATE TABLE blacklisted_tokens(
  id BIGSERIAL PRIMARY KEY,
  user_id BIGINT CHECK(user_id >0) NOT NULL,
  token VARCHAR(255) NOT NULL,
  expiry_date TIMESTAMP NOT NUll,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT fk_user_id FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE refresh_tokens(
  id BIGSERIAL PRIMARY KEY,
  user_id BIGINT CHECK(user_id >0) NOT NULL UNIQUE,
  token VARCHAR(255) NOT NULL,
  expiry_date TIMESTAMP NOT NUll,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT fk_user_id FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE
);